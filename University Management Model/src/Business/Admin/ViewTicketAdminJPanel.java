/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Business.Admin;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Business.Student.*;
import Business.Admin.Ticket;
import Business.Admin.TicketManager;
import Business.Professor.CourseHistory;
import javax.swing.JOptionPane;
import java.util.Random;
import Business.Professor.ProfessorLogin;
import Business.Professor.ProfessorLoginHistory;
import Business.Student.EnrollmentHistory;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.BorderFactory;
import javax.swing.border.Border;

/**
 *
 * @author sanal
 */
public class ViewTicketAdminJPanel extends javax.swing.JPanel {
    
    private TicketManager ticketManager;
    javax.swing.JPanel workArea;
    StudentLoginHistory history;
    studentLogin loggedInUser;
    ProfessorLogin loggedInProf;
    ProfessorLoginHistory history1;
    EnrollmentHistory enrollmentList;
    CourseHistory chistory;

    /**
     * Creates new form ViewTicketJPanel
     */
    public ViewTicketAdminJPanel(javax.swing.JPanel workArea, TicketManager ticketManager, StudentLoginHistory history, studentLogin loggedInUser, ProfessorLogin loggedInProf, ProfessorLoginHistory history1, EnrollmentHistory enrollmentList,CourseHistory chistory) {
        
        initComponents();
        this.ticketManager = ticketManager;
        this.workArea = workArea;
        this.history = history;
        this.loggedInUser = loggedInUser;
        this.loggedInProf = loggedInProf;
        this.history1 = history1;
        this.enrollmentList = enrollmentList;
        this.chistory = chistory;
        
        txtName.setEditable(false);
        txtTicket.setEditable(false);
        txtTicketID.setEditable(false);
        populateTable();
        customizeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUsername = new javax.swing.JLabel();
        btnDeleteTicket = new javax.swing.JButton();
        btnViewTicket = new javax.swing.JButton();
        lblViewTickets = new javax.swing.JLabel();
        lblFname = new javax.swing.JLabel();
        btnSearchTicketID = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        btnUpdateUserAccounts = new javax.swing.JButton();
        txtTicket = new javax.swing.JTextField();
        lblTicket = new javax.swing.JLabel();
        lblTicketID = new javax.swing.JLabel();
        txtTicketID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        txtSearchTicketID = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        txtResolved = new javax.swing.JTextField();
        lblComment = new javax.swing.JLabel();
        txtComment = new javax.swing.JTextField();

        lblUsername.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblUsername.setText("Resolved:");

        btnDeleteTicket.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDeleteTicket.setText("Delete");
        btnDeleteTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTicketActionPerformed(evt);
            }
        });

        btnViewTicket.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnViewTicket.setText("View");
        btnViewTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewTicketActionPerformed(evt);
            }
        });

        lblViewTickets.setBackground(new java.awt.Color(204, 204, 255));
        lblViewTickets.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblViewTickets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewTickets.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/icons/support-ticket.png"))); // NOI18N
        lblViewTickets.setText("View Tickets");

        lblFname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFname.setText("Name:");

        btnSearchTicketID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearchTicketID.setText("Search Ticket ID");
        btnSearchTicketID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchTicketIDActionPerformed(evt);
            }
        });

        btnUpdateUserAccounts.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdateUserAccounts.setText("Update");
        btnUpdateUserAccounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserAccountsActionPerformed(evt);
            }
        });

        lblTicket.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTicket.setText("Ticket:");
        lblTicket.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        lblTicketID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTicketID.setText("Ticket ID:");

        tblUsers.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Ticket", "Ticket ID", "Resolved?", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblUsers);

        txtSearchTicketID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblComment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblComment.setText("Comment:");
        lblComment.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 415, Short.MAX_VALUE)
                .addComponent(btnUpdateUserAccounts)
                .addGap(500, 500, 500))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(525, 525, 525)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblComment, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFname, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTicketID, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtResolved, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTicketID, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnViewTicket)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteTicket)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblViewTickets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtSearchTicketID, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnSearchTicketID)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(396, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteTicket)
                    .addComponent(btnViewTicket))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFname)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTicketID)
                    .addComponent(txtTicketID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtResolved, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTicket)
                    .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblComment)
                    .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateUserAccounts)
                    .addComponent(btnBack))
                .addGap(49, 49, 49))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblViewTickets)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearchTicketID)
                        .addComponent(txtSearchTicketID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(418, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTicketActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblUsers.getSelectedRow();
        if (selectedRow >= 0) {
            String ticketID = (String) tblUsers.getValueAt(selectedRow, 2);
            Ticket ticket = ticketManager.getTicketById(ticketID);
            if (ticket != null) {
                ticketManager.deleteTicket(ticket);
                populateTable();
                JOptionPane.showMessageDialog(null, "Ticket deleted successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "Ticket not found!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a ticket from the table!");
        }

    }//GEN-LAST:event_btnDeleteTicketActionPerformed

    private void btnViewTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewTicketActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblUsers.getSelectedRow();
        if (selectedRow >= 0) {
            String ticketID = (String) tblUsers.getValueAt(selectedRow, 2);
            Ticket ticket = ticketManager.getTicketById(ticketID);
            if (ticket != null) {
                txtName.setText(ticket.getName());
                txtTicketID.setText(ticket.getTicketId());
                txtResolved.setText(ticket.isResolved() ? "Yes" : "No");
                txtTicket.setText(ticket.getMessage());
                txtComment.setText(ticket.getComment());
            } else {
                JOptionPane.showMessageDialog(null, "Ticket not found!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a ticket from the table!");
        }
        

    }//GEN-LAST:event_btnViewTicketActionPerformed

    private void btnUpdateUserAccountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserAccountsActionPerformed
        // TODO add your handling code here:
        String ticketID = txtTicketID.getText();
        Ticket ticket = ticketManager.getTicketById(ticketID);
        if (ticket != null) {
            ticket.setName(txtName.getText());
            ticket.setMessage(txtTicket.getText());

            // Capture the comment from txtComment and save it in the ticket
            String comment = txtComment.getText().trim();
            ticket.setComment(comment);

            String resolvedText = txtResolved.getText().trim();
            if ("Yes".equalsIgnoreCase(resolvedText) || "No".equalsIgnoreCase(resolvedText)) {
                ticket.setResolved("Yes".equalsIgnoreCase(resolvedText));
                populateTable();
                JOptionPane.showMessageDialog(null, "Ticket updated successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "Invalid input for resolved! Please enter 'Yes' or 'No'");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ticket not found!");
        }
    }//GEN-LAST:event_btnUpdateUserAccountsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ManageAdminJPanel panel = new ManageAdminJPanel(workArea, history, loggedInUser, loggedInProf, history1, enrollmentList, ticketManager,chistory);
        workArea.add("ManageAdminJPanel", panel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchTicketIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchTicketIDActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        model.setRowCount(0);

        // Search for the ticket
        String ticketID = txtSearchTicketID.getText().trim();
        Ticket ticket = ticketManager.getTicketById(ticketID);

        if (ticket != null) {
            // If ticket is found, add it to the table
            Object[] row = new Object[5];
            row[0] = ticket.getName();
            row[1] = ticket.getMessage();
            row[2] = ticket.getTicketId();
            row[3] = ticket.isResolved() ? "Yes" : "No";
            row[4] = ticket.getComment();
            model.addRow(row);
        } else {
            // If ticket is not found, show a message dialog
            JOptionPane.showMessageDialog(null, "Ticket not found!");
            populateTable();
        }

    }//GEN-LAST:event_btnSearchTicketIDActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        model.setRowCount(0);
        for (Ticket ticket : ticketManager.getAllTickets()) {
            Object[] row = new Object[5];  // Increased size to include comment
            row[0] = ticket.getName();
            row[1] = ticket.getMessage();
            row[2] = ticket.getTicketId();
            row[3] = ticket.isResolved() ? "Yes" : "No";
            row[4] = ticket.getComment(); // Add comment to the table
            model.addRow(row);
        }
    }
    
    private void customizeComponents() {
        // Set background color
        this.setBackground(new Color(44, 62, 80));

        // Set font and text color for labels
        Font labelFont = new Font("Tahoma", Font.BOLD, 12);
        Color textColor = new Color(236, 240, 241);

        // Customize labels
        lblUsername.setFont(labelFont);
        lblUsername.setForeground(textColor);
        lblFname.setFont(labelFont);
        lblFname.setForeground(textColor);
        lblTicket.setFont(labelFont);
        lblTicket.setForeground(textColor);
        lblTicketID.setFont(labelFont);
        lblTicketID.setForeground(textColor);
        lblViewTickets.setFont(new Font("Tahoma", Font.BOLD, 28));
        lblViewTickets.setForeground(textColor);
        lblComment.setFont(labelFont);
        lblComment.setForeground(textColor);

        // Set text field styles
        Color textFieldBackground = new Color(52, 73, 94);
        Border textFieldBorder = BorderFactory.createEmptyBorder(5, 15, 5, 15);

        txtName.setBackground(textFieldBackground);
        txtName.setForeground(textColor);
        txtName.setBorder(textFieldBorder);
        txtTicket.setBackground(textFieldBackground);
        txtTicket.setForeground(textColor);
        txtTicket.setBorder(textFieldBorder);
        txtTicketID.setBackground(textFieldBackground);
        txtTicketID.setForeground(textColor);
        txtTicketID.setBorder(textFieldBorder);
        txtSearchTicketID.setBackground(textFieldBackground);
        txtSearchTicketID.setForeground(textColor);
        txtSearchTicketID.setBorder(textFieldBorder);
        txtResolved.setBackground(textFieldBackground);
        txtResolved.setForeground(textColor);
        txtResolved.setBorder(textFieldBorder);
        txtComment.setBackground(textFieldBackground);
        txtComment.setForeground(textColor);
        txtComment.setBorder(textFieldBorder);

        // Set button style
        Color buttonBackground = new Color(52, 152, 219);
        Color buttonTextColor = new Color(255, 255, 255);
        Border buttonBorder = BorderFactory.createEmptyBorder(10, 25, 10, 25);

        btnDeleteTicket.setBackground(buttonBackground);
        btnDeleteTicket.setForeground(buttonTextColor);
        btnDeleteTicket.setBorder(buttonBorder);
        btnViewTicket.setBackground(buttonBackground);
        btnViewTicket.setForeground(buttonTextColor);
        btnViewTicket.setBorder(buttonBorder);
        btnSearchTicketID.setBackground(buttonBackground);
        btnSearchTicketID.setForeground(buttonTextColor);
        btnSearchTicketID.setBorder(buttonBorder);
        btnUpdateUserAccounts.setBackground(buttonBackground);
        btnUpdateUserAccounts.setForeground(buttonTextColor);
        btnUpdateUserAccounts.setBorder(buttonBorder);
        btnBack.setBackground(buttonBackground);
        btnBack.setForeground(buttonTextColor);
        btnBack.setBorder(buttonBorder);

        // Set table style
        tblUsers.setBackground(textFieldBackground);
        tblUsers.setForeground(textColor);
        tblUsers.setFont(new Font("Tahoma", Font.PLAIN, 14));
        jScrollPane1.getViewport().setBackground(new Color(44, 62, 80));
        
        // Set table header style
        tblUsers.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 14));
        tblUsers.getTableHeader().setBackground(new Color(52, 73, 94));
        tblUsers.getTableHeader().setForeground(new Color(44, 62, 80));
    }

    @Override
    public void setVisible(boolean aFlag) {
        super.setVisible(aFlag);
        if (aFlag && tblUsers != null) {
            populateTable();
        }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteTicket;
    private javax.swing.JButton btnSearchTicketID;
    private javax.swing.JButton btnUpdateUserAccounts;
    private javax.swing.JButton btnViewTicket;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblComment;
    private javax.swing.JLabel lblFname;
    private javax.swing.JLabel lblTicket;
    private javax.swing.JLabel lblTicketID;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblViewTickets;
    private javax.swing.JTable tblUsers;
    private javax.swing.JTextField txtComment;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtResolved;
    private javax.swing.JTextField txtSearchTicketID;
    private javax.swing.JTextField txtTicket;
    private javax.swing.JTextField txtTicketID;
    // End of variables declaration//GEN-END:variables
}
