/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Business.Student;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.io.File;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author anzal
 */
public class StudentSignUpJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentSignUpJPanel
     */
    

    StudentLoginHistory history;
    studentLogin loggedInUser;
    
    public StudentSignUpJPanel(StudentLoginHistory history,JPanel workArea,studentLogin loggedInUser) {
    initComponents();
    this.history = history;
    this.loggedInUser = loggedInUser;
    customizeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSignUpStudent = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblPincode = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtFname = new javax.swing.JTextField();
        txtLname = new javax.swing.JTextField();
        lblFname = new javax.swing.JLabel();
        txtNeu = new javax.swing.JTextField();
        lblLname = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblNeu = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtPincode = new javax.swing.JTextField();
        lblPhone = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnSave = new javax.swing.JButton();
        lblImage = new javax.swing.JLabel();
        btnBrowse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        lblSignUpStudent.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        lblSignUpStudent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSignUpStudent.setText("SIGN UP STUDENT");

        lblPincode.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPincode.setText("Pincode : ");

        lblAddress.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAddress.setText("Address : ");

        lblFname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFname.setText("First Name :");

        lblLname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLname.setText("Last Name :");
        lblLname.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        lblNeu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNeu.setText("NEU ID :");

        lblAge.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAge.setText("Age : ");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEmail.setText("Email : ");

        lblPhone.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPhone.setText("Phone : ");

        lblPassword.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPassword.setText("Password : ");

        lblUsername.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblUsername.setText("Username : ");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setText("Insert Image");
        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnBrowse.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBrowse.setForeground(new java.awt.Color(0, 0, 255));
        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/icons/signup_1.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(525, 525, 525)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(txtPassword)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPincode, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNeu, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLname, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFname, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFname)
                            .addComponent(txtLname)
                            .addComponent(txtNeu)
                            .addComponent(txtAge)
                            .addComponent(txtEmail)
                            .addComponent(txtPhone)
                            .addComponent(txtPincode)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnBrowse)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addGap(700, 700, 700))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(600, 600, 600))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSignUpStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblAddress, lblAge, lblEmail, lblFname, lblLname, lblNeu, lblPhone, lblPincode});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAddress, txtAge, txtEmail, txtFname, txtLname, txtNeu, txtPhone, txtPincode});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(lblSignUpStudent)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFname)
                            .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLname)
                            .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNeu)
                            .addComponent(txtNeu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(btnBrowse)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPhone)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPincode)
                    .addComponent(txtPincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAddress)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(83, 83, 83))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblAddress, lblAge, lblEmail, lblFname, lblLname, lblNeu, lblPhone, lblPincode});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtAddress, txtAge, txtEmail, txtFname, txtLname, txtNeu, txtPhone, txtPincode});

    }// </editor-fold>//GEN-END:initComponents

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String firstName = txtFname.getText();
        String lastName = txtLname.getText();
        int neuId = Integer.parseInt(txtNeu.getText());
        int age = Integer.parseInt(txtAge.getText());
        String email = txtEmail.getText();
        int phone = Integer.parseInt(txtPhone.getText());
        int pincode = Integer.parseInt(txtPincode.getText());
        String address = txtAddress.getText();
        String username = txtUsername.getText();
        String password = txtPassword.getText();
        
        // Use the selectedImagePath to set the image
        String image = selectedImagePath;
        
        studentLogin vs = history.addnewstudents();
        
        if (containsOnlyLetters(firstName) && isEmptyValue(firstName)) {
                    vs.setFirstName(firstName);
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for First name: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (containsOnlyLetters(lastName) && isEmptyValue(lastName)) {
                    vs.setLastName(lastName);
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Last name: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (containsOnlyIntNumbers(neuId) && isZeroValue(neuId)) {
                    vs.setNeuId(neuId);
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for NEU ID: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (containsOnlyIntNumbers(age) && isZeroValue(age)) {
                    vs.setAge(age);
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Age: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (isValidEmail(email) && isEmptyValue(email)) {
                   vs.setEmail(email);
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Email: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (containsOnlyIntNumbers(phone) && isZeroValue(phone)) {
                    vs.setPhone(phone);
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Phone Number: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (containsOnlyIntNumbers(pincode) && isZeroValue(pincode)) {
                    vs.setPincode(pincode);
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Pincode: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (isEmptyValue(address)) {
                  vs.setAddress(address);
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Address: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (isEmptyValue(username)) {
                  vs.setUsername(username);
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Username: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        if (isEmptyValue(password)) {
                  vs.setPassword(password);
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid input for Password: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        vs.setImage(image); // Set the image path
        
        
        JOptionPane.showMessageDialog(this,"New Student added");
        
        txtFname.setText("");
        txtLname.setText("");
        txtNeu.setText("");
        txtAge.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        txtPincode.setText("");
        txtAddress.setText("");
        txtUsername.setText("");
        txtPassword.setText("");   
    }//GEN-LAST:event_btnSaveActionPerformed

     private String selectedImagePath; // Declare the selectedImagePath as an instance variable
    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        // TODO add your handling code here:
        JFileChooser browseImageFile = new JFileChooser();
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("IMAGES", "png", "jpg", "jpeg");
        browseImageFile.addChoosableFileFilter(fnef);
        int showOpenDialogue = browseImageFile.showOpenDialog(null);
        if (showOpenDialogue == JFileChooser.APPROVE_OPTION) {
            File selectedImageFile = browseImageFile.getSelectedFile();
            selectedImagePath = selectedImageFile.getAbsolutePath();
            System.out.println(selectedImagePath);
            JOptionPane.showMessageDialog(null, selectedImagePath);

            loggedInUser.setImage(selectedImagePath);
            System.out.println("displaypath:" + loggedInUser.getImage());
            ImageIcon ii = new ImageIcon(selectedImagePath);
            Image image1 = ii.getImage().getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
            lblImage.setIcon(new ImageIcon(image1));
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    
    private static boolean isEmptyValue(String name) {
        return !name.isEmpty();
    }
    
    private static boolean isZeroValue(int value) {
    return value != 0;
}
    
    private boolean containsOnlyLetters(String name) {
                return name.matches("^[a-zA-Z]*$");
            }
    
    private static boolean containsOnlyNumbers(String number) {
        String regex = "^[0-9]*$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(number);

        return matcher.matches();
    }
    
    
    private static boolean containsOnlyIntNumbers(int number) {
    int temp = number;
    int digit;
    
    while (temp != 0) {
        digit = temp % 10;
        
        if (digit < 0 || digit > 9) {
            return false; // If a non-digit is found, return false
        }
        
        temp /= 10;
    }

    return true; // If all digits are 0-9, return true
}

    
    private static boolean isValidEmail(String email1) {
        String reg = "^[A-Za-z0-9+_.-]+@(.+)$";
        Pattern pattern = Pattern.compile(reg);
        Matcher matcher = pattern.matcher(email1);

        return matcher.matches();
    }
    
    private static boolean isValidPhoneNumber(String phone) {
        String regex = "^[0-9\\-\\s]+$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(phone);

        return matcher.matches();
    }

    private void customizeComponents() {
        // Set background color
        this.setBackground(new Color(44, 62, 80));

        // Set font and text color for labels
        Font labelFont = new Font("Tahoma", Font.BOLD, 12);
        Color textColor = new Color(236, 240, 241);

        lblSignUpStudent.setFont(new Font("Tahoma", Font.BOLD, 28));
        lblSignUpStudent.setForeground(textColor);

        lblFname.setFont(labelFont);
        lblFname.setForeground(textColor);
        lblLname.setFont(labelFont);
        lblLname.setForeground(textColor);
        lblNeu.setFont(labelFont);
        lblNeu.setForeground(textColor);
        lblAge.setFont(labelFont);
        lblAge.setForeground(textColor);
        lblEmail.setFont(labelFont);
        lblEmail.setForeground(textColor);
        lblPhone.setFont(labelFont);
        lblPhone.setForeground(textColor);
        lblPincode.setFont(labelFont);
        lblPincode.setForeground(textColor);
        lblAddress.setFont(labelFont);
        lblAddress.setForeground(textColor);
        lblUsername.setFont(labelFont);
        lblUsername.setForeground(textColor);
        lblPassword.setFont(labelFont);
        lblPassword.setForeground(textColor);

        // Set text field and password field styles
        Color textFieldBackground = new Color(52, 73, 94);
        Border textFieldBorder = BorderFactory.createEmptyBorder(5, 15, 5, 15);

        txtFname.setBackground(textFieldBackground);
        txtFname.setForeground(textColor);
        txtFname.setBorder(textFieldBorder);
        txtLname.setBackground(textFieldBackground);
        txtLname.setForeground(textColor);
        txtLname.setBorder(textFieldBorder);
        txtNeu.setBackground(textFieldBackground);
        txtNeu.setForeground(textColor);
        txtNeu.setBorder(textFieldBorder);
        txtAge.setBackground(textFieldBackground);
        txtAge.setForeground(textColor);
        txtAge.setBorder(textFieldBorder);
        txtEmail.setBackground(textFieldBackground);
        txtEmail.setForeground(textColor);
        txtEmail.setBorder(textFieldBorder);
        txtPhone.setBackground(textFieldBackground);
        txtPhone.setForeground(textColor);
        txtPhone.setBorder(textFieldBorder);
        txtPincode.setBackground(textFieldBackground);
        txtPincode.setForeground(textColor);
        txtPincode.setBorder(textFieldBorder);
        txtAddress.setBackground(textFieldBackground);
        txtAddress.setForeground(textColor);
        txtAddress.setBorder(textFieldBorder);
        txtUsername.setBackground(textFieldBackground);
        txtUsername.setForeground(textColor);
        txtUsername.setBorder(textFieldBorder);
        txtPassword.setBackground(textFieldBackground);
        txtPassword.setForeground(textColor);
        txtPassword.setBorder(textFieldBorder);

        // Set button style
        Color buttonBackground = new Color(52, 152, 219);
        Color buttonTextColor = new Color(255, 255, 255);
        Border buttonBorder = BorderFactory.createEmptyBorder(10, 25, 10, 25);

        btnSave.setBackground(buttonBackground);
        btnSave.setForeground(buttonTextColor);
        btnSave.setBorder(buttonBorder);
        btnBrowse.setBackground(buttonBackground);
        btnBrowse.setForeground(buttonTextColor);
        btnBrowse.setBorder(buttonBorder);

        // Set image label style
        lblImage.setForeground(textColor);
        lblImage.setBorder(BorderFactory.createLineBorder(textColor));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFname;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblLname;
    private javax.swing.JLabel lblNeu;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPincode;
    private javax.swing.JLabel lblSignUpStudent;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFname;
    private javax.swing.JTextField txtLname;
    private javax.swing.JTextField txtNeu;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPincode;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
