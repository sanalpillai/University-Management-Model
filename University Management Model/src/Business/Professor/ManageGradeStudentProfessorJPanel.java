/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Business.Professor;

import Business.Student.Enrollment;
import Business.Student.EnrollmentHistory;
import Business.Student.StudentLoginHistory;
import Business.Student.studentLogin;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anzal
 */
public class ManageGradeStudentProfessorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageGradeStudentProfessorJPanel
     */
    
    javax.swing.JPanel workArea;
    StudentLoginHistory studhistory;
    private studentLogin loggedInUser;
    private ProfessorLogin profLogin;
    EnrollmentHistory enrollmentList;
    CourseHistory c_history;
    ProfessorLoginHistory history1;
    private Enrollment enroll;
    private Course cos;
    

    public ManageGradeStudentProfessorJPanel(JPanel workArea, ProfessorLoginHistory history1 , ProfessorLogin profLogin,CourseHistory c_history,Course cos,StudentLoginHistory studhistory,studentLogin loggedInUser,EnrollmentHistory enrollmentList,Enrollment enroll) {
    
        initComponents();
        this.workArea = workArea;
        this.loggedInUser = loggedInUser;
        this.studhistory = studhistory;
        this.enrollmentList = enrollmentList;
        this.c_history = c_history;
        this.profLogin = profLogin;
        this.history1 = history1;
        this.enroll = enroll;
        this.cos = cos;
        
        DisplayStudentsData();
        customizeComponents();
    
    }
    
    private void DisplayStudentsData() {
        
        
        
     DefaultTableModel model = (DefaultTableModel) studTable.getModel();
        model.setRowCount(0); // Clear existing rows
        
            for (Enrollment vs : enrollmentList.getEnrollmentList()) {
                for (studentLogin stud1 : studhistory.getHistory()) {
                    //System.out.println(stud1);
            Object[] row = new Object[7];
            
            row[0] = vs;
            row[1] = vs.getCourse();
            row[2] = stud1.getFirstName();
            row[3] = stud1.getNeuId();
            //row[4] = vs.getMarks();
            //row[5] = vs.getGpa();
            
            model.addRow(row);
        }
            }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageStudentsTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        lblCourseID = new javax.swing.JLabel();
        btnViewDetails = new javax.swing.JButton();
        txtCourseID = new javax.swing.JTextField();
        lblCourseName = new javax.swing.JLabel();
        txtCourseName = new javax.swing.JTextField();
        lblMarks = new javax.swing.JLabel();
        txtMarks = new javax.swing.JTextField();
        btnCalculateGPA = new javax.swing.JButton();
        lblMarksTitle = new javax.swing.JLabel();
        btnUpdateStudent = new javax.swing.JButton();
        lblGPA = new javax.swing.JLabel();
        txtGpa = new javax.swing.JTextField();
        lblStudName = new javax.swing.JLabel();
        txtStudName = new javax.swing.JTextField();
        lblNeuID = new javax.swing.JLabel();
        txtNeuID = new javax.swing.JTextField();
        lblGrade = new javax.swing.JLabel();
        txtGrade = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        lblManageStudentsTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblManageStudentsTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageStudentsTitle.setText("MANAGE & GRADE STUDENTS");

        studTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Student Name", "Student NEU ID", "Marks", "GPA out of 4.0", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(studTable);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblCourseID.setText("Course ID :");

        btnViewDetails.setText("View Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        txtCourseID.setEditable(false);
        txtCourseID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCourseIDActionPerformed(evt);
            }
        });

        lblCourseName.setText("Course Name : ");

        txtCourseName.setEditable(false);

        lblMarks.setText("Marks : ");

        btnCalculateGPA.setText("Calculate GPA");
        btnCalculateGPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateGPAActionPerformed(evt);
            }
        });

        lblMarksTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMarksTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMarksTitle.setText("PROVIDE MARKS");
        lblMarksTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnUpdateStudent.setText("Update Student");
        btnUpdateStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateStudentActionPerformed(evt);
            }
        });

        lblGPA.setText("GPA :");

        txtGpa.setEditable(false);
        txtGpa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGpaActionPerformed(evt);
            }
        });

        lblStudName.setText("Student Name : ");

        txtStudName.setEditable(false);

        lblNeuID.setText("Student NEU ID :");

        txtNeuID.setEditable(false);

        lblGrade.setText("Grade : ");

        txtGrade.setEditable(false);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/icons/score.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblManageStudentsTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBack)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMarksTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(69, 69, 69)
                                        .addComponent(btnCalculateGPA)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnUpdateStudent))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblGPA)
                                            .addComponent(lblGrade)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblCourseName)
                                                    .addComponent(lblStudName)
                                                    .addComponent(lblNeuID))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtStudName)
                                                    .addComponent(txtNeuID, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(31, 31, 31)
                                                .addComponent(lblMarks))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblCourseID)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMarks, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                            .addComponent(txtGpa, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                            .addComponent(txtGrade)
                                            .addComponent(txtCourseID, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                            .addComponent(txtCourseName, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnViewDetails)))
                .addGap(100, 100, 100)
                .addComponent(jLabel3)
                .addGap(0, 118, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblCourseID, lblCourseName, lblGPA, lblGrade, lblMarks, lblNeuID, lblStudName, txtCourseID, txtCourseName, txtGpa, txtGrade, txtMarks, txtNeuID, txtStudName});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblManageStudentsTitle)
                .addGap(25, 25, 25)
                .addComponent(btnBack)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnViewDetails)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMarksTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblStudName)
                                    .addComponent(txtStudName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNeuID)
                                    .addComponent(txtNeuID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCourseID)
                                    .addComponent(txtCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCourseName)
                                    .addComponent(txtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMarks))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtGpa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGPA))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblGrade)
                                    .addComponent(txtGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnCalculateGPA)
                                    .addComponent(btnUpdateStudent))))))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblCourseID, lblCourseName, lblGPA, lblGrade, lblMarks, lblNeuID, lblStudName, txtCourseID, txtCourseName, txtGpa, txtGrade, txtMarks, txtNeuID, txtStudName});

    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        
        ViewProfessorPortalJPanel panel = new ViewProfessorPortalJPanel(workArea,history1,profLogin,c_history,cos,studhistory,loggedInUser,enrollmentList,enroll);
        workArea.add("ViewProfessorPortalJPanel", panel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = studTable.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel)  studTable.getModel();
        Enrollment selectedcourse = (Enrollment) model.getValueAt(selectedRowIndex, 0);
        studentLogin stud = selectedcourse.getStudlogin();
        
//       txtCourseID.setText(selectedcourse.getCourse_ID());
//       txtCourseName.setText(selectedcourse.getCourse());
       
       for (Enrollment cos1 : enrollmentList.getEnrollmentList()) {
           for (studentLogin stud1 : studhistory.getHistory()) {
            String studfname = stud1.getFirstName();
            String neuID = String.valueOf(stud1.getNeuId());
           
            
            txtStudName.setText(String.valueOf(studfname));
            txtNeuID.setText(neuID);
            txtCourseID.setText(String.valueOf(selectedcourse.getCourse_ID()));
            txtCourseName.setText(String.valueOf(selectedcourse.getCourse()));
            //txtMarks.setText(String.valueOf(selectedcourse.getMarks()));
            //txtGpa.setText(String.valueOf(selectedcourse.getGpa()));
            
           
           }
       }
       
       
      
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void btnCalculateGPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateGPAActionPerformed
        // TODO add your handling code here:
        
//        String cid = txtCourseID.getText();
//        String cname = txtCourseName.getText();
        String marks = txtMarks.getText();
        //String gpa1 = txtGpa.getText();
        String gpa = calculateGPA(marks);
        String grade = calculateGrade(gpa);
        
        
        Enrollment cos2 = new Enrollment();
        //cos2.setCourse_ID(cid);
        //cos2.setCourse(cname);
        cos2.setMarks(marks);
        cos2.setGpa(gpa);
        cos2.setGrade(grade);
        
        //txtGPA.setText(gpa);
        
        ArrayList<Enrollment> users = enrollmentList.getEnrollmentList();
       
       for(Enrollment cos3 : users){
           
           //cos3.setCourse_ID(cid);
           //cos3.setCourse(cname);
           cos3.setMarks(marks);
           
           
           txtGpa.setText(gpa);
           cos3.setGpa(gpa);
           
           txtGrade.setText(grade);
           cos3.setGrade(grade);
           
       }
        
       
        
    }//GEN-LAST:event_btnCalculateGPAActionPerformed

    private void btnUpdateStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStudentActionPerformed
        // TODO add your handling code here:
        
        String cid = txtCourseID.getText();
        String cname = txtCourseName.getText();
        String marks = txtMarks.getText();
        //String gpa = calculateGPA(marks);
        String gpa1 = txtGpa.getText();
        String grade = txtGrade.getText();
        String neuID = txtNeuID.getText();
        String fname = txtStudName.getText();
        
        
          DefaultTableModel model = (DefaultTableModel) studTable.getModel();
        
        if(studTable.getSelectedRowCount() == 1){
           
            model.setValueAt(fname,studTable.getSelectedRow(), 2);
            model.setValueAt(neuID,studTable.getSelectedRow(), 3);
            
            model.setValueAt(cid,studTable.getSelectedRow(), 0);
            model.setValueAt(cname,studTable.getSelectedRow(), 1);
            model.setValueAt(marks,studTable.getSelectedRow(), 4);
            model.setValueAt(gpa1,studTable.getSelectedRow(), 5);
            model.setValueAt(grade,studTable.getSelectedRow(), 6);
        
        }
        
//        txtMarks.setText("");
//        txtGpa.setText("");
//        
    }//GEN-LAST:event_btnUpdateStudentActionPerformed

    private void txtGpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGpaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGpaActionPerformed

    private void txtCourseIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCourseIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCourseIDActionPerformed


    private String calculateGPA(String marks) {
    double marksValue = Double.parseDouble(marks);
    double gpa;
    //String grade;

    if (marksValue >= 95) {
        gpa = 4.0;
        //grade = "A";
    } else if (marksValue >= 90) {
        gpa = 3.8;
       // grade = "A-";
    } else if (marksValue >= 85) {
        gpa = 3.5;
       // grade = "B+";
    } else if (marksValue >= 80) {
        gpa = 3.2;
        //grade = "B";
    } else if (marksValue >= 75) {
        gpa = 3.0;
        //grade = "B-";
    } 
     else if (marksValue >= 70) {
        gpa = 2.8;
       // grade = "C+";
     }
     else if (marksValue >= 65) {
        gpa = 2.5;
       // grade = "C-";
     }
     else if (marksValue >= 60) {
        gpa = 2.0;
       // grade = "D";
     }
     else if (marksValue >= 40) {
        gpa = 1.0;
       // grade = "D-";
     }
    else {
        gpa = 0.0;
       // grade = "F";
    }

    return String.format("%.2f", gpa);
}
    
    
    private String calculateGrade(String gpa) {
    String grade;

    switch(gpa) {
        case "4.00":
            grade = "A";
            break;
        case "3.80":
            grade = "A-";
            break;
        case "3.50":
            grade = "B+";
            break;
        case "3.20":
            grade = "B";
            break;
        case "3.00":
            grade = "B-";
            break;
        case "2.80":
            grade = "C+";
            break;
        case "2.50":
            grade = "C-";
            break;
        case "2.00":
            grade = "D";
            break;
        case "1.00":
            grade = "D-";
            break;
        default:
            grade = "F";
    }

    return grade;
}

    private void customizeComponents() {
        // Set background color
        this.setBackground(new Color(44, 62, 80));

        // Set font and text color for labels
        Font labelFont = new Font("Tahoma", Font.BOLD, 12);
        Color textColor = new Color(236, 240, 241);

        lblManageStudentsTitle.setFont(new Font("Tahoma", Font.BOLD, 28));
        lblManageStudentsTitle.setForeground(textColor);

        lblCourseID.setFont(labelFont);
        lblCourseID.setForeground(textColor);
        lblCourseName.setFont(labelFont);
        lblCourseName.setForeground(textColor);
        lblMarks.setFont(labelFont);
        lblMarks.setForeground(textColor);
        lblGPA.setFont(labelFont);
        lblGPA.setForeground(textColor);
        lblGrade.setFont(labelFont);
        lblGrade.setForeground(textColor);
        lblStudName.setFont(labelFont);
        lblStudName.setForeground(textColor);
        lblNeuID.setFont(labelFont);
        lblNeuID.setForeground(textColor);
        lblMarksTitle.setFont(new Font("Tahoma", Font.BOLD, 14));
        lblMarksTitle.setForeground(textColor);

        // Set text field styles
        Color textFieldBackground = new Color(52, 73, 94);
        Border textFieldBorder = BorderFactory.createEmptyBorder(5, 15, 5, 15);

        txtCourseID.setBackground(textFieldBackground);
        txtCourseID.setForeground(textColor);
        txtCourseID.setBorder(textFieldBorder);
        txtCourseName.setBackground(textFieldBackground);
        txtCourseName.setForeground(textColor);
        txtCourseName.setBorder(textFieldBorder);
        txtMarks.setBackground(textFieldBackground);
        txtMarks.setForeground(textColor);
        txtMarks.setBorder(textFieldBorder);
        txtGpa.setBackground(textFieldBackground);
        txtGpa.setForeground(textColor);
        txtGpa.setBorder(textFieldBorder);
        txtGrade.setBackground(textFieldBackground);
        txtGrade.setForeground(textColor);
        txtGrade.setBorder(textFieldBorder);
        txtStudName.setBackground(textFieldBackground);
        txtStudName.setForeground(textColor);
        txtStudName.setBorder(textFieldBorder);
        txtNeuID.setBackground(textFieldBackground);
        txtNeuID.setForeground(textColor);
        txtNeuID.setBorder(textFieldBorder);

        // Set button styles
        Color buttonBackground = new Color(52, 152, 219);
        Color buttonTextColor = new Color(255, 255, 255);
        Border buttonBorder = BorderFactory.createEmptyBorder(10, 25, 10, 25);

        btnBack.setBackground(buttonBackground);
        btnBack.setForeground(buttonTextColor);
        btnBack.setBorder(buttonBorder);
        btnViewDetails.setBackground(buttonBackground);
        btnViewDetails.setForeground(buttonTextColor);
        btnViewDetails.setBorder(buttonBorder);
        btnCalculateGPA.setBackground(buttonBackground);
        btnCalculateGPA.setForeground(buttonTextColor);
        btnCalculateGPA.setBorder(buttonBorder);
        btnUpdateStudent.setBackground(buttonBackground);
        btnUpdateStudent.setForeground(buttonTextColor);
        btnUpdateStudent.setBorder(buttonBorder);

        // Set table styles
        studTable.setBackground(textFieldBackground);
        studTable.setForeground(textColor);
        studTable.setFont(new Font("Tahoma", Font.PLAIN, 12));
        jScrollPane1.getViewport().setBackground(new Color(44, 62, 80));

        // Set table header styles
        studTable.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12));
        studTable.getTableHeader().setBackground(new Color(52, 73, 94));
        studTable.getTableHeader().setForeground(new Color(44, 62, 80));
    }
    
    
//private String calculateGade(String gpa) {
//
//    String grade;
//
//    if(gpa.equals("4.0")) {
//        grade = "A";
//    } 
//    else if (gpa.equals("3.8")) {
//        
//        grade = "A-";
//    } else if (gpa.equals("3.5")) {
//        //gpa = 3.5;
//        grade = "B+";
//    } else if (gpa.equals("3.2")) {
//        //gpa = 3.2;
//        grade = "B";
//    } else if (gpa.equals("3.0")) {
//        //gpa = 3.0;
//        grade = "B-";
//    } 
//     else if (gpa.equals("2.8")) {
//       // gpa = 2.8;
//        grade = "C+";
//     }
//     else if (gpa.equals("2.5")) {
//        //gpa = 2.5;
//        grade = "C-";
//     }
//     else if (gpa.equals("2.0")) {
//       // gpa = 2.0;
//        grade = "D";
//     }
//     else if (gpa.equals("1.0")) {
//        //gpa = 1.0;
//        grade = "D-";
//     }
//    else {
//       // gpa = "0.0";
//        grade = "F";
//    }
//
//    return String.format("%.2f", grade);
//}
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCalculateGPA;
    private javax.swing.JButton btnUpdateStudent;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCourseID;
    private javax.swing.JLabel lblCourseName;
    private javax.swing.JLabel lblGPA;
    private javax.swing.JLabel lblGrade;
    private javax.swing.JLabel lblManageStudentsTitle;
    private javax.swing.JLabel lblMarks;
    private javax.swing.JLabel lblMarksTitle;
    private javax.swing.JLabel lblNeuID;
    private javax.swing.JLabel lblStudName;
    private javax.swing.JTable studTable;
    private javax.swing.JTextField txtCourseID;
    private javax.swing.JTextField txtCourseName;
    private javax.swing.JTextField txtGpa;
    private javax.swing.JTextField txtGrade;
    private javax.swing.JTextField txtMarks;
    private javax.swing.JTextField txtNeuID;
    private javax.swing.JTextField txtStudName;
    // End of variables declaration//GEN-END:variables
}
