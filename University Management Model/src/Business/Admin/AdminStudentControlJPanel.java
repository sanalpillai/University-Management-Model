/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Business.Admin;

import Business.Professor.ProfessorLogin;
import Business.Professor.ProfessorLoginHistory;
import Business.Student.EnrollmentHistory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Business.Student.StudentLoginHistory;
import Business.Student.studentLogin;
import java.awt.CardLayout;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import Business.Admin.TicketManager;
import Business.Professor.CourseHistory;
import java.awt.Color;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.border.Border;


/**
 *
 * @author sanal
 */
public class AdminStudentControlJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminUserAccounts
     */
    
    StudentLoginHistory history;
    javax.swing.JPanel workArea;
    studentLogin loggedInUser;
    ProfessorLoginHistory history1;
    ProfessorLogin loggedInProf;
    EnrollmentHistory enrollmentList;
    TicketManager ticketManager;
    CourseHistory chistory;
    
            
    public AdminStudentControlJPanel(javax.swing.JPanel workArea, StudentLoginHistory history, studentLogin loggedInUser, ProfessorLoginHistory history1, ProfessorLogin loggedInProf, EnrollmentHistory enrollmentList, TicketManager ticketManager,CourseHistory chistory) {
        
        initComponents();
        this.workArea = workArea;
        this.history = history;
        this.loggedInUser = loggedInUser;
        this.history1 = history1;
        this.loggedInProf = loggedInProf;
        this.enrollmentList = enrollmentList;
        this.ticketManager = ticketManager;
        this.chistory = chistory;
        txtPassword.setEditable(false);
        populateTable();
        customizeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        btntblDelete = new javax.swing.JButton();
        btntblView = new javax.swing.JButton();
        lblUserinfo = new javax.swing.JLabel();
        txtSearchUsername = new javax.swing.JTextField();
        btntblSearch = new javax.swing.JButton();
        btnUpdateUserAccounts = new javax.swing.JButton();
        lblPassword = new javax.swing.JLabel();
        txtNeu = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        lblLname = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        lblNeu = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblPincode = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtFname = new javax.swing.JTextField();
        txtPincode = new javax.swing.JTextField();
        txtLname = new javax.swing.JTextField();
        lblPhone = new javax.swing.JLabel();
        lblFname = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        tblUsers.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "NEU ID", "Age", "Email", "Phone", "Pincode", "Address", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false, true, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblUsers);

        btntblDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btntblDelete.setText("Delete");
        btntblDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntblDeleteActionPerformed(evt);
            }
        });

        btntblView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btntblView.setText("View");
        btntblView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntblViewActionPerformed(evt);
            }
        });

        lblUserinfo.setBackground(new java.awt.Color(204, 204, 255));
        lblUserinfo.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblUserinfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserinfo.setText("MANAGE STUDENTS");

        txtSearchUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btntblSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btntblSearch.setText("Search By Username");
        btntblSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntblSearchActionPerformed(evt);
            }
        });

        btnUpdateUserAccounts.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdateUserAccounts.setText("Update");
        btnUpdateUserAccounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserAccountsActionPerformed(evt);
            }
        });

        lblPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPassword.setText("Password : ");

        lblLname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblLname.setText("Last Name :");
        lblLname.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        lblUsername.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUsername.setText("Username : ");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        lblNeu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNeu.setText("NEU ID :");

        lblAge.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAge.setText("Age : ");

        lblPincode.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPincode.setText("Pincode : ");

        lblAddress.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAddress.setText("Address : ");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblEmail.setText("Email : ");

        lblPhone.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPhone.setText("Phone : ");

        lblFname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFname.setText("First Name :");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/icons/graduates.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSearchUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btntblSearch)
                                .addGap(275, 275, 275)
                                .addComponent(btntblView)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btntblDelete)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel1)
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNeu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblLname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblFname, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblAge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPincode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtLname)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNeu)
                                        .addComponent(txtAge)
                                        .addComponent(txtEmail)
                                        .addComponent(txtPhone)
                                        .addComponent(txtPincode)
                                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtUsername)
                                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(40, 40, 40)
                                            .addComponent(btnUpdateUserAccounts))))))
                        .addGap(500, 500, 500))))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnBack)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblUserinfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btntblDelete)
                    .addComponent(btntblView)
                    .addComponent(btntblSearch)
                    .addComponent(txtSearchUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFname))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLname))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNeu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNeu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPincode))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsername))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPassword)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnUpdateUserAccounts)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 252, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(44, 44, 44))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btntblDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntblDeleteActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblUsers.getSelectedRow();

        if (selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();

        studentLogin selectedUser = (studentLogin) model.getValueAt(selectedRowIndex, 0);
        history.deleteStudent(selectedUser);

        populateTable();

        JOptionPane.showMessageDialog(this, "Student Account Deleted.");

    }//GEN-LAST:event_btntblDeleteActionPerformed

    private void btntblViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntblViewActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblUsers.getSelectedRow();

        if (selectedRowIndex<0) {

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        //studentLogin selectedUser = (studentLogin) model.getValueAt(selectedRowIndex, 0);

        txtFname.setText(model.getValueAt(selectedRowIndex, 0).toString());
        txtLname.setText(model.getValueAt(selectedRowIndex, 1).toString());
        txtNeu.setText(model.getValueAt(selectedRowIndex, 2).toString());
        txtAge.setText(model.getValueAt(selectedRowIndex, 3).toString());
        txtEmail.setText(model.getValueAt(selectedRowIndex, 4).toString());
        txtPhone.setText(model.getValueAt(selectedRowIndex, 5).toString());
        txtPincode.setText(model.getValueAt(selectedRowIndex, 6).toString());
        txtAddress.setText(model.getValueAt(selectedRowIndex, 7).toString());
        txtUsername.setText(model.getValueAt(selectedRowIndex, 8).toString());
        String password = model.getValueAt(selectedRowIndex, 9).toString();
        String hashedPassword = hashPassword(password);
        txtPassword.setText(hashedPassword);
    }//GEN-LAST:event_btntblViewActionPerformed

    private void btntblSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntblSearchActionPerformed
        // TODO add your handling code here:

        String searchUsername = txtSearchUsername.getText().trim();
        populateTable(searchUsername);

    }//GEN-LAST:event_btntblSearchActionPerformed

    private void btnUpdateUserAccountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserAccountsActionPerformed
        // TODO add your handling code here:
        
        String firstName = txtFname.getText().trim();
        String lastName = txtLname.getText().trim();
        String neuId = txtNeu.getText().trim();
        String age = txtAge.getText().trim();
        String email = txtEmail.getText().trim();
        String phone = txtPhone.getText().trim();
        String pincode = txtPincode.getText().trim();
        String address = txtAddress.getText().trim();
        String username = txtUsername.getText().trim();
        String password = new String(txtPassword.getPassword());

        int selectedRowIndex = tblUsers.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a user to update.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();

            studentLogin selectedUser = (studentLogin) model.getValueAt(selectedRowIndex, 0);
            selectedUser.setFirstName(firstName);
            selectedUser.setLastName(lastName);
            selectedUser.setNeuId(Long.parseLong(neuId));
            selectedUser.setAge(Long.parseLong(age));
            selectedUser.setEmail(email);
            selectedUser.setPhone(Long.parseLong(phone));
            selectedUser.setPincode(Long.parseLong(pincode));
            selectedUser.setAddress(address);
            selectedUser.setUsername(username);

        populateTable();
        JOptionPane.showMessageDialog(this, "Student Updated Successfully.");
        
    }//GEN-LAST:event_btnUpdateUserAccountsActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ManageAdminJPanel panel = new ManageAdminJPanel(workArea,history,loggedInUser,loggedInProf,history1,enrollmentList,ticketManager,chistory);
        workArea.add("ManageAdminJPanel", panel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        model.setRowCount(0);
        
        
        for (studentLogin u : history.getHistory()){
            Object[] row = new Object[10];
            row[0] = u;
            row[1] = u.getLastName();
            row[2] = u.getNeuId();
            row[3] = u.getAge();            
            row[4] = u.getEmail();
            row[5] = u.getPhone();
            row[6] = u.getPincode();
            row[7] = u.getAddress();
            row[8] = u.getUsername();
            row[9] = hashPassword(u.getPassword());
            
            model.addRow(row);
        }
        
    }
    
    private void populateTable(String filterUsername) {
        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        model.setRowCount(0);

        for (studentLogin u : history.getHistory()) {
            if (!filterUsername.isEmpty() && !u.getUsername().toLowerCase().contains(filterUsername.toLowerCase())) {
                continue;
            }
            Object[] row = new Object[10];
            row[0] = u;
            row[1] = u.getLastName();
            row[2] = u.getNeuId();
            row[3] = u.getAge();            
            row[4] = u.getEmail();
            row[5] = u.getPhone();
            row[6] = u.getPincode();
            row[7] = u.getAddress();
            row[8] = u.getUsername();
            row[9] = hashPassword(u.getPassword());

            model.addRow(row);
        }
    }
    
    private String hashPassword(String password) {
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            byte[] hash = digest.digest(password.getBytes("UTF-8"));
            StringBuilder hexString = new StringBuilder();

            for (int i = 0; i < hash.length; i++) {
                String hex = Integer.toHexString(0xff & hash[i]);
                if(hex.length() == 1) hexString.append('0');
                hexString.append(hex);
            }

            return hexString.toString();
        } catch (NoSuchAlgorithmException | java.io.UnsupportedEncodingException e) {
            throw new RuntimeException(e);
        }
    }
    
    private void customizeComponents() {
        // Set background color
        this.setBackground(new Color(44, 62, 80));

        // Set font and text color for labels
        Font labelFont = new Font("Tahoma", Font.BOLD, 12);
        Color textColor = new Color(236, 240, 241);

        lblUserinfo.setFont(new Font("Tahoma", Font.BOLD, 28));
        lblUserinfo.setForeground(textColor);

        lblFname.setFont(labelFont);
        lblFname.setForeground(textColor);
        lblLname.setFont(labelFont);
        lblLname.setForeground(textColor);
        lblNeu.setFont(labelFont);
        lblNeu.setForeground(textColor);
        lblAge.setFont(labelFont);
        lblAge.setForeground(textColor);
        lblEmail.setFont(labelFont);
        lblEmail.setForeground(textColor);
        lblPhone.setFont(labelFont);
        lblPhone.setForeground(textColor);
        lblPincode.setFont(labelFont);
        lblPincode.setForeground(textColor);
        lblAddress.setFont(labelFont);
        lblAddress.setForeground(textColor);
        lblUsername.setFont(labelFont);
        lblUsername.setForeground(textColor);
        lblPassword.setFont(labelFont);
        lblPassword.setForeground(textColor);

        // Set text field and password field styles
        Color textFieldBackground = new Color(52, 73, 94);
        Border textFieldBorder = BorderFactory.createEmptyBorder(5, 15, 5, 15);

        txtFname.setBackground(textFieldBackground);
        txtFname.setForeground(textColor);
        txtFname.setBorder(textFieldBorder);
        txtLname.setBackground(textFieldBackground);
        txtLname.setForeground(textColor);
        txtLname.setBorder(textFieldBorder);
        txtNeu.setBackground(textFieldBackground);
        txtNeu.setForeground(textColor);
        txtNeu.setBorder(textFieldBorder);
        txtAge.setBackground(textFieldBackground);
        txtAge.setForeground(textColor);
        txtAge.setBorder(textFieldBorder);
        txtEmail.setBackground(textFieldBackground);
        txtEmail.setForeground(textColor);
        txtEmail.setBorder(textFieldBorder);
        txtPhone.setBackground(textFieldBackground);
        txtPhone.setForeground(textColor);
        txtPhone.setBorder(textFieldBorder);
        txtPincode.setBackground(textFieldBackground);
        txtPincode.setForeground(textColor);
        txtPincode.setBorder(textFieldBorder);
        txtAddress.setBackground(textFieldBackground);
        txtAddress.setForeground(textColor);
        txtAddress.setBorder(textFieldBorder);
        txtUsername.setBackground(textFieldBackground);
        txtUsername.setForeground(textColor);
        txtUsername.setBorder(textFieldBorder);
        txtPassword.setBackground(textFieldBackground);
        txtPassword.setForeground(textColor);
        txtPassword.setBorder(textFieldBorder);
        txtSearchUsername.setBackground(textFieldBackground);
        txtSearchUsername.setForeground(textColor);
        txtSearchUsername.setBorder(textFieldBorder);

        // Set button style
        Color buttonBackground = new Color(52, 152, 219);
        Color buttonTextColor = new Color(255, 255, 255);
        Border buttonBorder = BorderFactory.createEmptyBorder(10, 25, 10, 25);

        btntblDelete.setBackground(buttonBackground);
        btntblDelete.setForeground(buttonTextColor);
        btntblDelete.setBorder(buttonBorder);
        btntblView.setBackground(buttonBackground);
        btntblView.setForeground(buttonTextColor);
        btntblView.setBorder(buttonBorder);
        btntblSearch.setBackground(buttonBackground);
        btntblSearch.setForeground(buttonTextColor);
        btntblSearch.setBorder(buttonBorder);
        btnUpdateUserAccounts.setBackground(buttonBackground);
        btnUpdateUserAccounts.setForeground(buttonTextColor);
        btnUpdateUserAccounts.setBorder(buttonBorder);
        btnBack.setBackground(buttonBackground);
        btnBack.setForeground(buttonTextColor);
        btnBack.setBorder(buttonBorder);

        // Set table style
        tblUsers.setBackground(textFieldBackground);
        tblUsers.setForeground(textColor);
        tblUsers.setFont(new Font("Tahoma", Font.PLAIN, 14));
        jScrollPane1.getViewport().setBackground(new Color(44, 62, 80));
        
        // Set table header style
        tblUsers.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 14));
        tblUsers.getTableHeader().setBackground(new Color(52, 73, 94));
        tblUsers.getTableHeader().setForeground(new Color(44, 62, 80));

    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnUpdateUserAccounts;
    private javax.swing.JButton btntblDelete;
    private javax.swing.JButton btntblSearch;
    private javax.swing.JButton btntblView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFname;
    private javax.swing.JLabel lblLname;
    private javax.swing.JLabel lblNeu;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPincode;
    private javax.swing.JLabel lblUserinfo;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable tblUsers;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFname;
    private javax.swing.JTextField txtLname;
    private javax.swing.JTextField txtNeu;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPincode;
    private javax.swing.JTextField txtSearchUsername;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
