/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Business.Student;

import Business.Admin.TicketManager;
import Business.Professor.CourseHistory;
import Business.Professor.ProfessorLogin;
import Business.Professor.ProfessorLoginHistory;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import javax.swing.JOptionPane;

/**
 *
 * @author zakir
 */

public class StudentTranscriptJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentTranscriptJPanel
     */
    javax.swing.JPanel workArea;
    StudentLoginHistory history;
    private studentLogin loggedInUser;
    private ProfessorLogin profLogin;
    EnrollmentHistory enrollmentList;
    CourseHistory c_history;
    ProfessorLoginHistory history1;
    private Enrollment enroll;
    TicketManager ticketManager;

    public StudentTranscriptJPanel(JPanel workArea,StudentLoginHistory history,studentLogin loggedInUser,EnrollmentHistory enrollmentList,CourseHistory c_history,ProfessorLogin profLogin,ProfessorLoginHistory history1,Enrollment enroll,TicketManager ticketManager) throws NullPointerException {
        initComponents();
        this.workArea = workArea;
        this.loggedInUser = loggedInUser;
        this.history = history;
        this.enrollmentList = enrollmentList;
        this.c_history = c_history;
        this.profLogin = profLogin;
        this.history1 = history1;
        this.enroll = enroll;
        this.ticketManager = ticketManager;
        
        DisplayStudentsData();
        customizeComponents();
        
//        for (Enrollment vs : enrollmentList.getEnrollmentList()){
//            
//            aa.setText(vs.getCourse());
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        enrollmentTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnPDF = new javax.swing.JButton();

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("TRANSCRIPT");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        enrollmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Professor Name", "Decsription", "Term", "Status", "Marks", "GPA out of 4.0", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enrollmentTable);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/icons/class.png"))); // NOI18N

        btnPDF.setText("Download PDF");
        btnPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(556, 556, 556)
                        .addComponent(btnPDF)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(91, 91, 91)
                .addComponent(btnPDF)
                .addGap(0, 110, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ViewStudentPortalJPanel panel = new ViewStudentPortalJPanel(workArea,history,loggedInUser,enrollmentList,c_history,profLogin,history1,enroll,ticketManager);
        workArea.add("ViewStudentPortalJPanel", panel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFActionPerformed
        // TODO add your handling code here:
        try {
            Document document = new Document(PageSize.A4);
            PdfWriter.getInstance(document, new FileOutputStream("StudentTranscript.pdf"));
            document.open();
            
            document.add(new Paragraph("Student Transcript"));
            document.add(new Paragraph(" ")); // Adding a blank line
            
            PdfPTable table = new PdfPTable(enrollmentTable.getColumnCount());
            
            // Adding table headers
            for (int i = 0; i < enrollmentTable.getColumnCount(); i++) {
                table.addCell(enrollmentTable.getColumnName(i));
            }
            
            // Adding table rows
            for (int i = 0; i < enrollmentTable.getRowCount(); i++) {
                for (int j = 0; j < enrollmentTable.getColumnCount(); j++) {
                    table.addCell(enrollmentTable.getValueAt(i, j).toString());
                }
            }
            
            document.add(table);
            document.close();
            
            JOptionPane.showMessageDialog(this, "PDF generated successfully!");
        } catch (DocumentException | FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Error generating PDF: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }                             
        
    }//GEN-LAST:event_btnPDFActionPerformed

    private void customizeComponents() {
        // Set background color
        this.setBackground(new Color(44, 62, 80));

        // Set font and text color for labels
        Font labelFont = new Font("Tahoma", Font.BOLD, 12);
        Color textColor = new Color(236, 240, 241);

        lblTitle.setFont(new Font("Tahoma", Font.BOLD, 28));
        lblTitle.setForeground(textColor);

        // Set button style
        Color buttonBackground = new Color(52, 152, 219);
        Color buttonTextColor = new Color(255, 255, 255);
        Border buttonBorder = BorderFactory.createEmptyBorder(10, 25, 10, 25);

        btnBack.setBackground(buttonBackground);
        btnBack.setForeground(buttonTextColor);
        btnBack.setBorder(buttonBorder);

        // Set table style
        Color textFieldBackground = new Color(52, 73, 94);
        enrollmentTable.setBackground(textFieldBackground);
        enrollmentTable.setForeground(textColor);
        enrollmentTable.setFont(new Font("Tahoma", Font.PLAIN, 14));
        jScrollPane1.getViewport().setBackground(new Color(44, 62, 80));

        // Set table header style
        enrollmentTable.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 14));
        enrollmentTable.getTableHeader().setBackground(new Color(52, 73, 94));
        enrollmentTable.getTableHeader().setForeground(new Color(44, 62, 80));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPDF;
    private javax.swing.JTable enrollmentTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables

    private void DisplayStudentsData() {
     DefaultTableModel model = (DefaultTableModel) enrollmentTable.getModel();
        model.setRowCount(0); // Clear existing rows
        
        for (Enrollment vs : enrollmentList.getEnrollmentList()){
            Object[] row = new Object[9];
            row[0] = vs;
            row[1] = vs.getCourse();
            row[2] = vs.getProfessor();
            row[3] = vs.getDescription();
            row[4] = vs.getTerm();
            row[5] = vs.getWithdraw();
            row[6] = vs.getMarks();
            row[7] = vs.getGpa();
            row[8] = vs.getGrade();
            model.addRow(row);
            
            
        }
        }

}
