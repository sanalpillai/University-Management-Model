/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Business.Student;

import Business.Admin.TicketManager;
import Business.Professor.CourseHistory;
import Business.Professor.ProfessorLogin;
import Business.Professor.ProfessorLoginHistory;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.Border;

/**
 *
 * @author zakir
 */
public class WithdrawStudentCourseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form WithdrawStudentCourseJPanel
     */
    javax.swing.JPanel workArea;
    StudentLoginHistory history;
    private studentLogin loggedInUser;
    EnrollmentHistory enrollmentList;
    private ProfessorLogin profLogin;
    CourseHistory c_history;
    ProfessorLoginHistory history1;
    private Enrollment enroll;
    TicketManager ticketManager;
    
    public WithdrawStudentCourseJPanel(JPanel workArea,StudentLoginHistory history,studentLogin loggedInUser,EnrollmentHistory enrollmentList,CourseHistory c_history,ProfessorLogin profLogin,ProfessorLoginHistory history1,Enrollment enroll,TicketManager ticketManager) {
        initComponents();
        
        this.workArea = workArea;
        this.loggedInUser = loggedInUser;
        this.history = history;
        this.enrollmentList = enrollmentList;
        this.c_history = c_history;
        this.profLogin = profLogin;
        this.history1 = history1;
        this.enroll = enroll;
        this.ticketManager = ticketManager;
        customizeComponents();
        
        cmbCourse.removeAllItems();
        cmbProfessor.removeAllItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnWithdraw = new javax.swing.JButton();
        lblCourse = new javax.swing.JLabel();
        cmbCourse = new javax.swing.JComboBox<>();
        lblProfessor = new javax.swing.JLabel();
        cmbProfessor = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("WITHDRAW COURSE");

        btnWithdraw.setText("Withdraw Course");
        btnWithdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWithdrawActionPerformed(evt);
            }
        });

        lblCourse.setText("Course: ");

        cmbCourse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCourseActionPerformed(evt);
            }
        });

        lblProfessor.setText("Professor:");

        cmbProfessor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProfessorActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/icons/door.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(500, 500, 500)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblProfessor)
                            .addComponent(lblCourse))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbCourse, 0, 368, Short.MAX_VALUE)
                            .addComponent(cmbProfessor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(253, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 322, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(625, 625, 625))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(600, 600, 600))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourse)
                    .addComponent(cmbCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProfessor)
                    .addComponent(cmbProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(btnWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(200, 200, 200))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ViewStudentPortalJPanel panel = new ViewStudentPortalJPanel(workArea,history,loggedInUser,enrollmentList, c_history,profLogin,history1,enroll,ticketManager);
        workArea.add("ViewStudentPortalJPanel", panel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCourseActionPerformed
        // TODO add your handling code here:
        // Clear existing items in the JComboBox

    // Populate the JComboBox with course names from the enrollment list
    for (Enrollment enrollment : enrollmentList.getEnrollmentList()) {
        if (!itemExistsInComboBox(cmbCourse, enrollment.getCourse())) {
            cmbCourse.addItem(enrollment.getCourse());
        }
    }
    }//GEN-LAST:event_cmbCourseActionPerformed

    private void cmbProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProfessorActionPerformed
        // TODO add your handling code here:
         // Populate the JComboBox with course names from the enrollment list
    for (Enrollment enrollment : enrollmentList.getEnrollmentList()) {
        if (!itemExistsInComboBox(cmbProfessor, enrollment.getProfessor())) {
            cmbProfessor.addItem(enrollment.getProfessor());
        }
    }
    }//GEN-LAST:event_cmbProfessorActionPerformed

    private void btnWithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWithdrawActionPerformed
        // TODO add your handling code here:
    String selectedCourse = cmbCourse.getSelectedItem().toString();
    String selectedProfessor = cmbProfessor.getSelectedItem().toString();
    
     Enrollment selectedEnrollment = findEnrollment(selectedCourse, selectedProfessor);
     
     if (selectedEnrollment != null) {
        // Update the selected Enrollment's withdraw status to "W"
        selectedEnrollment.setWithdraw("W");
        JOptionPane.showMessageDialog(this, "Course withdrawn successfully!");
    } else {
        JOptionPane.showMessageDialog(this, "Selected course and professor combination not found.");
    }
    }//GEN-LAST:event_btnWithdrawActionPerformed

    private void customizeComponents() {
    // Set background color
    this.setBackground(new Color(44, 62, 80));

    // Set font and text color for labels
    Font labelFont = new Font("Tahoma", Font.BOLD, 12);
    Color textColor = new Color(236, 240, 241);

    lblTitle.setFont(new Font("Tahoma", Font.BOLD, 28));
    lblTitle.setForeground(textColor);

    lblCourse.setFont(labelFont);
    lblCourse.setForeground(textColor);
    lblProfessor.setFont(labelFont);
    lblProfessor.setForeground(textColor);

    // Set combo box styles
    Color comboBoxBackground = new Color(52, 73, 94);
    cmbCourse.setBackground(comboBoxBackground);
    cmbCourse.setForeground(textColor);
    cmbProfessor.setBackground(comboBoxBackground);
    cmbProfessor.setForeground(textColor);

    // Set button style
    Color buttonBackground = new Color(52, 152, 219);
    Color buttonTextColor = new Color(255, 255, 255);
    Border buttonBorder = BorderFactory.createEmptyBorder(10, 25, 10, 25);

    btnBack.setBackground(buttonBackground);
    btnBack.setForeground(buttonTextColor);
    btnBack.setBorder(buttonBorder);
    btnWithdraw.setBackground(buttonBackground);
    btnWithdraw.setForeground(buttonTextColor);
    btnWithdraw.setBorder(buttonBorder);
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnWithdraw;
    private javax.swing.JComboBox<String> cmbCourse;
    private javax.swing.JComboBox<String> cmbProfessor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblCourse;
    private javax.swing.JLabel lblProfessor;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables

    private boolean itemExistsInComboBox(JComboBox comboBox, String item) {
        for (int i = 0; i < comboBox.getItemCount(); i++) {
        if (comboBox.getItemAt(i).equals(item)) {
            return true;
        }
    }
    return false;
    }

    private Enrollment findEnrollment(String selectedCourse, String selectedProfessor) {
        for (Enrollment enrollment : enrollmentList.getEnrollmentList()) {
        if (enrollment.getCourse().equals(selectedCourse) && enrollment.getProfessor().equals(selectedProfessor)) {
            return enrollment;
        }
    }
    return null; // Return null if no matching Enrollment is found
    }
}
