/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Business.Admin;

import Business.Professor.ProfessorLogin;
import Business.Professor.ProfessorLoginHistory;
import Business.Student.*;
import java.awt.CardLayout;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.Admin.TicketManager;
import Business.Professor.CourseHistory;
import java.awt.Color;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.border.Border;

/**
 *
 * @author zakir
 */

public class AdminStudentTranscriptJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentTranscriptJPanel
     */
    javax.swing.JPanel workArea;
    StudentLoginHistory history;
    private studentLogin loggedInUser;
    ProfessorLogin loggedInProf;
    ProfessorLoginHistory history1;
    EnrollmentHistory enrollmentList;
    TicketManager ticketManager;
    CourseHistory chistory;
    

    public AdminStudentTranscriptJPanel(JPanel workArea,StudentLoginHistory history,studentLogin loggedInUser,ProfessorLogin loggedInProf,ProfessorLoginHistory history1,EnrollmentHistory enrollmentList, TicketManager ticketManager,CourseHistory chistory) throws NullPointerException {
        initComponents();
        this.workArea = workArea;
        this.loggedInUser = loggedInUser;
        this.history = history;
        this.loggedInProf = loggedInProf;
        this.history1 = history1;
        this.enrollmentList = enrollmentList;
        this.ticketManager = ticketManager;
        this.chistory = chistory;
        customizeComponents();
        DisplayStudentsData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        enrollmentTable = new javax.swing.JTable();

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("TRANSCRIPT");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        enrollmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Student Name", "NEU ID", "Course", "Professor", "Marks", "GPA out of 4.0", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enrollmentTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 851, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 194, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ManageAdminJPanel panel = new ManageAdminJPanel(workArea,history,loggedInUser,loggedInProf,history1,enrollmentList,ticketManager,chistory);
        workArea.add("ManageAdminJPanel", panel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JTable enrollmentTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables

    private void DisplayStudentsData() {
    DefaultTableModel model = (DefaultTableModel) enrollmentTable.getModel();
    model.setRowCount(0); // Clear existing rows
    System.out.println("Clear existing rows");
    
    // Iterating through all users
    for (studentLogin u : history.getHistory()) {
            System.out.println("Iterating through all users");

        
        // Iterating through all enrollments
        for (Enrollment vs : enrollmentList.getEnrollmentList()){
            System.out.println("Iterating through all enrollments");
            System.out.println("vs.getStudentId()"+vs.getStudentId());
            System.out.println("u.getNeuId()"+u.getNeuId());
            // Check if the enrollment belongs to the current user
            if(vs.getStudentId().equals(String.valueOf(u.getNeuId()))){
                System.out.println("Check if the enrollment belongs to the current user");
                Object[] row = new Object[5];
                row[0] = u.getFirstName() + " " + u.getLastName();
                row[1] = u.getNeuId();
                row[2] = vs.getCourse();    
                row[3] = vs.getProfessor();
                row[4] = vs.getMarks();
                row[5] = vs.getGpa();
                row[6] = vs.getGrade();
                
                model.addRow(row);
            }
        }
    }
}
    
    private void customizeComponents() {
        // Set background color
        this.setBackground(new Color(44, 62, 80));

        // Set font and text color for labels
        Font labelFont = new Font("Tahoma", Font.BOLD, 12);
        Color textColor = new Color(236, 240, 241);

        lblTitle.setFont(new Font("Tahoma", Font.BOLD, 28));
        lblTitle.setForeground(textColor);

        // Set button style
        Color buttonBackground = new Color(52, 152, 219);
        Color buttonTextColor = new Color(255, 255, 255);
        Border buttonBorder = BorderFactory.createEmptyBorder(10, 25, 10, 25);

        btnBack.setBackground(buttonBackground);
        btnBack.setForeground(buttonTextColor);
        btnBack.setBorder(buttonBorder);

        // Set table style
        Color textFieldBackground = new Color(52, 73, 94);
        enrollmentTable.setBackground(textFieldBackground);
        enrollmentTable.setForeground(textColor);
        enrollmentTable.setFont(new Font("Tahoma", Font.PLAIN, 14));
        jScrollPane1.getViewport().setBackground(new Color(44, 62, 80));

        // Set table header style
        enrollmentTable.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 14));
        enrollmentTable.getTableHeader().setBackground(new Color(52, 73, 94));
        enrollmentTable.getTableHeader().setForeground(new Color(44, 62, 80));
    }

    
}
